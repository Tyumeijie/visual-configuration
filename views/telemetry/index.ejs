<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title><%= title %></title>
    <link rel="icon" href="/images/favicon.ico" type="image/x-icon"/>
    <link rel="stylesheet" type="text/css" href="/css/lib/rappid.css">
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <link rel="stylesheet" type="text/css" href="/css/orgchart.css">
    <link rel="stylesheet" type="text/css" href="/css/theme-picker.css">

    <!-- theme-specific application CSS  -->
    <link rel="stylesheet" type="text/css" href="/css/style.dark.css">
    <link rel="stylesheet" type="text/css" href="/css/style.material.css">
    <link rel="stylesheet" type="text/css" href="/css/style.modern.css">

    <!-- Import Google Icon Font -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <!-- Import materialize css lib -->

    <link rel="stylesheet" type="text/css" href="/css/lib/bootstrap-combined.min.css">
    <link rel="stylesheet" href="/css/custom.css"/>


    <style type="text/css">
        .nav-tabs > li .close.closeTab {
            border-left: 10px transparent solid;
            border-right: 10px transparent solid;
        }
        .nav-tabs > li{
            width: 10%; /* Display max 10 tabs meanwhile */
            text-align: center;

        }
        .nav-tabs > li > a {
            /* If the text is too long then use ellipisis to represetn */
            text-overflow: ellipsis;
            white-space: nowrap;
            overflow: hidden;
        }

        ul.nav.nav-tabs {
            /* Override the style from bootstrap*/
            margin-bottom: 1em !important;
            margin-top: 1em !important;
        }

        /* Next & previous buttons */
        .prev,
        .next {
            cursor: pointer;
            position: absolute;
            width: auto;
            color: black;
            font-weight: bold;
            font-size: 16px;
            border-radius: 0 3px 3px 0;
            user-select: none;
            -webkit-user-select: none;
        }
        .prev {
            left: 1%;
            top: 40%;
        }
        /* Position the "next button" to the right */
        .next {
            right: 1%;
            top: 40%;
            border-radius: 3px 0 0 3px;
        }
        .prev:hover, .next:hover {
            text-decoration: none;
        }

    </style>
</head>
<body>



<div id="app">
    <div class="app-header">
        <div class="app-title">
            <h1><%= title %></h1>
        </div>
        <div class="toolbar-container"></div>
        <div class="options-container" hidden>
            <button id="cancel-button" type="button" class="btn btn-outline-primary">Cancel</button>
            <button id="apply-button" type="button" class="btn btn-outline-primary">Apply</button>
        </div>
    </div>
    <div class="app-body">
        <div class="stencil-container"></div>
        <div class="paper-container"></div>
        <div class="inspector-container"></div>
        <div class="navigator-container"></div>
    </div>

    <div class="container-fluid">
        <a class="prev" style="visibility: hidden">❮</a>
        <a class="next" style="visibility: hidden">❯</a>
        <ul class="nav nav-tabs" id="editTabs">
            <li class="active"><a href="#Main" id="main" >Main</a></li>
        </ul>

    </div>

</div>

<!-- Rappid/JointJS dependencies: -->
<script src="/js/lib/jquery.js"></script>
<script src="/js/lib/lodash.js"></script>
<script src="/js/lib/backbone.js"></script>
<script src="/js/lib/graphlib.core.js"></script>
<script src="/js/lib/dagre.core.js"></script>
<script src="/js/lib/bootstrap.min.js"></script>

<script src="/js/lib/rappid.js"></script>

<!--[if IE 9]>
<script>
    // `-ms-user-select: none` doesn't work in IE9
    document.onselectstart = function () {
        return false;
    };
</script>
<![endif]-->

<!-- Application files:  -->
<script src="/js/config/halo.js"></script>
<script src="/js/config/selection.js"></script>
<script src="/js/config/inspector.js"></script>
<script src="/js/config/stencil.js"></script>
<script src="/js/config/toolbar.js"></script>
<script src="/js/config/sample-graphs.js"></script>
<script src="/js/views/main.js"></script>
<script src="/js/views/orgchart.js"></script>

<script src="/js/views/theme-picker.js"></script>
<script src="/js/models/joint.shapes.app.js"></script>
<script>
    joint.setTheme('modern');
    app = new App.MainView({el: '#app'});
    //themePicker = new App.ThemePicker({mainView: app});
    //themePicker.render().$el.appendTo(document.body);
    window.addEventListener('load', function () {
        //app.graph.fromJSON(JSON.parse(App.config.sampleGraphs.emergencyProcedure));

        App.pattern = {};
        App.pattern.tree = {factory: tree.bind(app, joint, V, _), hasCalled: false};

        App.tabs = {};
    });
</script>
<script>

    const tabsInLine = 10;

    function addTab(tab) {
         var len = tabControl.allTabs.length;
         tabControl.allTabs.push(tab);

        if (tabControl.activeWin.end < len-1) {
            var oldStart = tabControl.activeWin.start;
            var oldEnd = tabControl.activeWin.end;

            var newEnd= tabControl.activeWin.end = tabControl.allTabs.length-1;
            var newStart = tabControl.activeWin.start = tabControl.activeWin.end-tabsInLine+1;

            var i;
            for (i=oldStart; i<newStart; i++) {
                hideTab(tabControl.allTabs[i]);
            }
            for (i=oldEnd; i<newEnd; i++) {
                showTab(tabControl.allTabs[i]);
            }
        } else {
            tabControl.activeWin.end++;
        }
    }

    function rightMoveActiveWindow() {
        if (tabControl.activeWin.end < tabControl.allTabs.length-1) {
            tabControl.activeWin.start++;
            tabControl.activeWin.end++;
        }
    }

    function leftMoveActiveWindow() {
        if (tabControl.activeWin.start > 0) {
            tabControl.activeWin.start--;
            tabControl.activeWin.end--;
        }
    }

    function hideTab(tab) {
        // parent
        tab.css("display", "none");
    }

    function showTab(tab) {
        tab.css("display", tabDisplayType);
    }

    function updatePrevAndNextStatus() {
       if (tabControl.activeWin.start > 0) {
           $(".next").css("visibility", "visible");
       } else {
           $(".next").css("visibility", "hidden");
       }

       if (tabControl.activeWin.end < tabControl.allTabs.length-1) {
           $(".prev").css("visibility", "visible");
       } else {
           $(".prev").css("visibility", "hidden");
       }
    }

    function removeTab(tab) {

        var tabId = tab.attr("id");
        var isActive= tab.parent().hasClass("active");

        var start = tabControl.activeWin.start;
        var end = tabControl.activeWin.end;
        var len = tabControl.allTabs.length;
        for (var i=start; i<end+1; i++) {
            if (tabControl.allTabs[i].attr("id") === tabId) {
                tabControl.allTabs.splice(i, 1);
                break;
            }
        }

        // Update active window
        if (end < len-1) {
            // No change on the range of activeWin
            showTab(tabControl.allTabs[tabControl.activeWin.end]);
        } else if (start > 0) {
            leftMoveActiveWindow();
            showTab(tabControl.allTabs[tabControl.activeWin.start]);
        } else {
            tabControl.activeWin.end--;
        }

        if (isActive) {
            // Determine the current active tab
            if (i === len-1) {
                curTab = tabControl.allTabs[i-1];
            } else {
                curTab = tabControl.allTabs[i];
            }

            curTab.tab("show");
            curTab.trigger( "click" );
        }
    }

    $(function () {
        // when ever any tab is clicked this method will be call
        $("#editTabs").on("click", "a", function (evt) {
            evt.preventDefault();

            curTab = $(this);
            $(this).tab('show');

            var graphJSON = App.tabs[getIdOfCurrentTab()];
            if (graphJSON != undefined) {
                app.graph.fromJSON(JSON.parse(graphJSON));
            }
        });

        $(".prev").on("click", function (evt) {
            evt.preventDefault();

            hideTab(tabControl.allTabs[tabControl.activeWin.start]);
            showTab(tabControl.allTabs[tabControl.activeWin.end+1])
            rightMoveActiveWindow();
            updatePrevAndNextStatus();
        });

        $(".next").on("click", function (evt) {
            evt.preventDefault();

            hideTab(tabControl.allTabs[tabControl.activeWin.end]);
            showTab(tabControl.allTabs[tabControl.activeWin.start-1]);
            leftMoveActiveWindow();
            updatePrevAndNextStatus();
        })
    });

    // this method will demonstrate how to add tab dynamically
    function registerComposeButtonEvent() {

            var saveJSON = JSON.stringify(app.graph);
            App.tabs[getIdOfCurrentTab()] = saveJSON;

            var tabId = "tab" + tabsCount;

            newTab(tabId);

            curTab.tab('show');

            registerCloseEvent(curTab);
    }

    function newTab(tabId) {

        if (tabControl.allTabs.length >= tabsInLine) {
            hideTab(tabControl.allTabs[tabControl.activeWin.start]);
            tabControl.activeWin.start++;
        }

        var tab = `<li><a href="#${tabId}" id="${tabId}"><button class="close closeTab" type="button" >&times;</button>${tabId}</a></li>`;
        $('.nav-tabs').append(tab);

        curTab = $("#"+ tabId);
        addTab(curTab);
        updatePrevAndNextStatus();

        tabsCount += 1;
    }

    function registerCloseEvent(tab) {
        var selector = "#" + tab.attr("id") + " > button";

        $(selector).click(function (event) {
            // remove li of tab
            $(this).parent().parent().remove();
            // Upadate tabControl
            removeTab($(this).parent());
            updatePrevAndNextStatus();
        });
    }

    function getIdOfCurrentTab() {
        return curTab.attr("id");
    }

    var curTab = $("#main");
    var tabDisplayType = curTab.css("display");
    var tabsCount = 0;
    var tabControl = {
        allTabs: [],
        activeWin: {
            start: 0,
            end: -1
        }
    };

    addTab(curTab);

</script>

<script>
    // tell the embed parent frame the height of the content
    if (window.parent && window.parent.parent){
        window.parent.parent.postMessage(["resultsFrame", {
            height: document.body.getBoundingClientRect().height,
            slug: "g2vCv"
        }], "*")
    }
</script>

<script>
    document.getElementsByClassName("app-title")[0].addEventListener("click", function(){
        var stencil = $(".stencil-container");
        var zIndex = stencil.css("zIndex");
        stencil.css("z-index", -zIndex);

    });
</script>
<!-- Local file warning: -->
<div id="message-fs" style="display: none;">
    <p>The application was open locally using the file protocol. It is recommended to access it trough a <b>Web
            server</b>.</p>
    <p>Please see <a href="README.md">instructions</a>.</p>
</div>
<script>
    (function () {
        var fs = (document.location.protocol === 'file:');
        var ff = (navigator.userAgent.toLowerCase().indexOf('firefox') !== -1);
        if (fs && !ff) {
            (new joint.ui.Dialog({
                width: 300,
                type: 'alert',
                title: 'Local File',
                content: $('#message-fs').show()
            })).open();
        }
    })();
</script>

</body>
</html>
